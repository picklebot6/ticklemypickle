name: Automatic Reservations on PlayByPoint

on:
  workflow_dispatch:

jobs:
  pat-job:
    name: Pat Reservation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install

      - name: Run Playwright tests for Pat
        run: |
          echo "Running Playwright tests for Pat with PATH_MODE=pj"
          PATH_MODE=pj npx playwright test
        env:
          MY_USERNAME: ${{ secrets.MY_USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          MY_USERNAME2: ${{ secrets.MY_USERNAME2 }}
          PASSWORD2: ${{ secrets.PASSWORD2 }}
          MY_USERNAME3: ${{ secrets.MY_USERNAME3 }}
          PASSWORD23: ${{ secrets.PASSWORD3 }}

      - name: Zip Pat Playwright Report
        if: always()
        run: zip -r pj-playwright-report.zip playwright-report/

      - name: Upload Zipped Pat Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pj-html-report
          path: pj-playwright-report.zip

      - name: Upload Pat Test Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pj-screen-recording
          path: test-results/**/video.webm

  chanel-job:
    name: Chanel Reservation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install

      - name: Run Playwright tests for Chanel
        run: |
          echo "Running Playwright tests for Chanel with PATH_MODE=cj"
          PATH_MODE=cj npx playwright test
        env:
          MY_USERNAME: ${{ secrets.MY_USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          MY_USERNAME2: ${{ secrets.MY_USERNAME2 }}
          PASSWORD2: ${{ secrets.PASSWORD2 }}
          MY_USERNAME3: ${{ secrets.MY_USERNAME3 }}
          PASSWORD23: ${{ secrets.PASSWORD3 }}

      - name: Zip Chanel Playwright Report
        if: always()
        run: zip -r cj-playwright-report.zip playwright-report/

      - name: Upload Zipped Chanel Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cj-html-report
          path: cj-playwright-report.zip

      - name: Upload Chanel Test Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cj-screen-recording
          path: test-results/**/video.webm
  elbert-job:
    name: Elbert Reservation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install

      - name: Run Playwright tests for Chanel
        run: |
          echo "Running Playwright tests for Elbert with PATH_MODE=el"
          PATH_MODE=el npx playwright test
        env:
          MY_USERNAME: ${{ secrets.MY_USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          MY_USERNAME2: ${{ secrets.MY_USERNAME2 }}
          PASSWORD2: ${{ secrets.PASSWORD2 }}
          MY_USERNAME3: ${{ secrets.MY_USERNAME3 }}
          PASSWORD23: ${{ secrets.PASSWORD3 }}

      - name: Zip Elbert Playwright Report
        if: always()
        run: zip -r el-playwright-report.zip playwright-report/

      - name: Upload Elbert Chanel Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: el-html-report
          path: el-playwright-report.zip

      - name: Upload Elbert Test Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: el-screen-recording
          path: test-results/**/video.webm


